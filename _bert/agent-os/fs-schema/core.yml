
# ------------------------------------------------------------------------------
# Root Directories
# ------------------------------------------------------------------------------

root_directories:
  - path: .claude/
    description: Contains the definitions for agents and commands that drive the AI's behavior.
  - path: agent-os/
    description: The core directory for the agent-os system, containing configurations, roles, standards, product documentation, and specs.

# ------------------------------------------------------------------------------
# Static Structure
# ------------------------------------------------------------------------------

static_structure:
  - path: .claude/agents/agent-os/
    description: Contains markdown files, each defining an agent's role, responsibilities, and workflow.
    files:
      - pattern: "*.md"
        example: "api-engineer.md"
        description: "Defines an agent responsible for a specific area of implementation (e.g., API, UI, database)."

  - path: .claude/commands/agent-os/
    description: Contains markdown files that define high-level commands and their multi-phase execution processes.
    files:
      - pattern: "*.md"
        example: "create-spec.md"
        description: "Defines a command that orchestrates multiple agents to achieve a larger goal."

  - path: agent-os/config.yml
    description: The main configuration file for the agent-os system.

  - path: agent-os/roles/
    description: Contains YAML files defining the roles and responsibilities of different types of agents.
    files:
      - path: implementers.yml
        description: "Lists the agents responsible for implementing features."
      - path: verifiers.yml
        description: "Lists the agents responsible for verifying implementations."

  - path: agent-os/standards/
    description: Contains markdown files that outline coding conventions and project standards.
    subdirectories:
      - path: backend/
      - path: frontend/
      - path: global/
      - path: testing/

  - path: agent-os/fs-schema/
    description: Contains YAML files that define the filesystem schema for the agent-os and its addons.
    files:
      - path: core.yml
        description: "The core filesystem schema for agent-os."
      - pattern: "*.yml"
        example: "bert.yml"
        description: "A schema for an agent-os addon."

# ------------------------------------------------------------------------------
# Dynamic Structure
# ------------------------------------------------------------------------------

dynamic_structure:
  - path: agent-os/product/
    description: Contains high-level product documentation.
    created_by: product-planner
    files:
      - path: mission.md
        description: "Defines the product's mission, target users, and value proposition."
      - path: roadmap.md
        description: "Outlines the development roadmap with prioritized features."
      - path: tech-stack.md
        description: "Documents the technology stack used in the project."

  - path: agent-os/specs/[spec_slug]/
    description: "A directory for each new spec, where [spec_slug] is a kebab-cased name prefixed with the date (e.g., YYYY-MM-DD-new-feature)."
    created_by: spec-initializer
    placeholders:
      - name: "[spec_slug]"
        example: "2025-10-12-user-authentication"
        description: "A unique identifier for the spec, combining date and a descriptive name."

    subdirectories:
      - path: planning/
        description: "Contains all initial planning and research materials for a spec."
        files:
          - path: initialization.md
            description: "The user's raw, unmodified feature description."
            created_by: spec-initializer
          - path: requirements.md
            description: "A comprehensive document detailing the requirements, gathered from user Q&A and visual assets."
            created_by: spec-researcher
        subdirectories:
          - path: visuals/
            description: "A directory for visual assets like mockups, wireframes, or screenshots."

      - path: implementation/
        description: "Contains implementation reports from the various implementer agents."
        files:
          - pattern: "[task_number]-[task_title]-implementation.md"
            description: "A report detailing the work done for a specific task."
            created_by: "(specific implementer agents, e.g., api-engineer, ui-designer)"
            placeholders:
              - name: "[task_number]"
                example: "1.2"
              - name: "[task_title]"
                example: "create-user-model"

      - path: verification/
        description: "Contains reports and assets generated by verifier agents."
        files:
          - path: spec-verification.md
            description: "A report verifying the alignment of the spec and tasks with the initial requirements."
            created_by: spec-verifier
          - path: "[verifier_role]-verification.md"
            description: "A verification report from a specific verifier agent (e.g., backend-verifier)."
            created_by: "(specific verifier agents)"
            placeholders:
              - name: "[verifier_role]"
                example: "backend"
          - path: final-verification.html
            description: "The final, consolidated verification report for the entire spec implementation."
            created_by: implementation-verifier
        subdirectories:
          - path: screenshots/
            description: "A directory to store screenshots taken by verifier agents during their review."

    files:
      - path: spec.md
        description: "The detailed specification document, including goals, user stories, and technical approach."
        created_by: spec-writer
      - path: tasks.md
        description: "A detailed breakdown of the implementation tasks, grouped by the responsible agent."
        created_by: task-list-creator
