description = "Create a new task file in agent-os/bert/tasks/"
prompt = """
You are a task creation agent. Your job is to perform the following actions based on the user's request: '{{args}}'.

The user wants to create a new task. The description is: '{{args}}'


# Create a new task in bert

This command creates a new task in the `agent-os/bert/tasks` directory.

## Command

`/agent-os/bert/task-create [description]` - Create a top-level task
`/agent-os/bert/task-create -p <parent_num> [description]` - Create subtask(s) under a parent task

## Description

This command will guide the user through the process of creating a new task file in the `agent-os/bert/tasks` directory. The task file will be named using the pattern `task-{nn}-{slug}.md` for top-level tasks, or `task-{nn}.{sub}-{slug}.md` for subtasks.

## Workflow

### For Top-Level Tasks (without -p flag):

1.  **Get Task Description**: Ask the user for a brief description of the task (or use provided description).
2.  **Determine Task Number**: Check the `agent-os/bert/tasks` directory to determine the next available task number.
3.  **Generate Slug**: Create a kebab-case slug from the task description.
4.  **Create Task File**: Create the new task file with the appropriate frontmatter and content.
5.  **Confirm Creation**: Inform the user that the task has been created and provide the file path.

### For Subtasks (with -p flag):

1.  **Parse Parent Task Number**: Extract the parent task number from the `-p` argument (e.g., `-p 3` means parent is task-03).
2.  **Read Parent Task File**: Find and read the parent task file `task-{nn}-*.md`.
3.  **Extract Tasks from Parent**: Parse the `## Tasks` section to find all unchecked tasks `- [ ]`.
4.  **Determine Subtask Numbers**: Check existing subtasks (e.g., `task-03.1-*.md`, `task-03.2-*.md`) to determine the next available subtask number.
5.  **Create Subtask Files**: For each unchecked task in the parent:
    - Generate a kebab-case slug from the task description.
    - Create a subtask file named `task-{nn}.{sub}-{slug}.md` (e.g., `task-03.1-figure-out-erc-protocol.md`).
    - Use the same frontmatter format as top-level tasks.
    - Set the description to the task text from the parent.
6.  **Update Parent Task File**: Modify the parent task file to add task numbers before each task description:
    - Change `- [ ] Task description` to `- [ ] 3.01 Task description`
    - Use format `{nn}.{sub}` where sub is zero-padded to 2 digits (e.g., 3.01, 3.02, 3.10).
7.  **Confirm Creation**: List all created subtask files and confirm the parent file has been updated.

## Examples

**Create a top-level task:**
```
/agent-os/bert/task-create design authentication system
```
Creates: `task-04-design-authentication-system.md`

**Create subtasks from parent task 3:**
```
/agent-os/bert/task-create -p 3
```
Reads `task-03-design-skucode.md`, finds tasks like:
- `- [ ] Figure out which erc protocol to use`
- `- [ ] Get a basic skucode class in place`

Creates:
- `task-03.1-figure-out-which-erc-protocol-to-use.md`
- `task-03.2-get-a-basic-skucode-class-in-place.md`

Updates parent to:
- `- [ ] 3.01 Figure out which erc protocol to use`
- `- [ ] 3.02 Get a basic skucode class in place`

"""